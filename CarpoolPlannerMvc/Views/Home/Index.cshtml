@using CarpoolPlanner;
@using CarpoolPlanner.ViewModel;

@model IndexViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Common/Layout.cshtml";
}

@section scripts{
<script type="text/javascript">
  function updateAttendance() {
    $('message').text('');
    $.ajax();// TODO
    return false;
  };
</script>
}

<div class="row">
  <div class="col-md-12">
    <h2>Upcoming Carpools</h2>
    @if (AppUtils.IsUserStatus(CarpoolPlanner.Model.UserStatus.Active))
    {
      if (Model.Trips.Count > 0)
      { 
        <div>Select the days that you can come this week.</div><!-- TODO: generalize to not use the word "week" -->
        using (Html.BeginForm("Index", "Home"))
        {
          for (int i = 0; i < Model.Trips.Count; i++)
          {
            var trip = Model.Trips[i];
            <div class="repeater-item">
              @Html.HiddenFor(m => m.Trips[i].Id)
              <h3>@trip.Name</h3>
              @for (int j = 0; j < trip.Instances.Count; j++)
              {
                var tripInstance = trip.Instances[j];
                <div style="padding: 5px 0px;">
                  @Html.HiddenFor(m => m.Trips[i].Instances[j].Id)
                  <label style="margin-right:10px;">
                    @Html.CheckBoxFor(m => m.Trips[i].Instances[j].UserTripInstances[AppUtils.CurrentUserId].Attending == true,
                      new { @class = "checkbox" })<!-- todo: use indeterminate state -->
                    @tripInstance.ToString()
                  </label>
                  <!-- TODO: accordion-ize this. Also set: IsExpanded = j == 1. Also add angular directives -->
                  @Html.RadioButtonListFor(m => m.Trips[i].Instances[j].UserTripInstances[AppUtils.CurrentUserId].CommuteMethod, new { @class = "radio" })
                  <div style="margin-top:8px;">
                    @Html.CheckBoxFor(m => m.Trips[i].Instances[j].UserTripInstances[AppUtils.CurrentUserId].CanDriveIfNeeded, new { @class = "checkbox" })
                    @Html.LabelFor(m => m.Trips[i].Instances[j].UserTripInstances[AppUtils.CurrentUserId].CanDriveIfNeeded)
                  </div>
                  <div style="display: inline-block; margin-left: 20px;">
                    @Html.LabelFor(m => m.Trips[i].Instances[j].UserTripInstances[AppUtils.CurrentUserId].Seats)
                    @Html.TextBoxFor(m => m.Trips[i].Instances[j].UserTripInstances[AppUtils.CurrentUserId].Seats,
                       new { type = "number", @class = "form-control form-control-inline", min = "1", style = "width: 70px;" })
                  </div>
                  <hr style="margin:7px 0px;" />
                  <div ng-class="{ textDanger: tripInstance.availableSeats < tripInstance.requiredSeats }"><b>Total seats:</b> @tripInstance.GetAvailableSeats()</div>
                  <div><b>Total coming:</b> @tripInstance.GetRequiredSeats()</div>
                  <div>@tripInstance.GetStatusReport()</div>
                </div>
              }
            </div>
          }
          @Model.RenderMessage()
          <input type="submit" value="Save" class="btn btn-default" onclick="return updateAttendance();" />
        }
      }
      else // Model.Trips.Count == 0
      {
        <p>You have not selected any trips. Go to the @Html.ActionLink("trips", "Trips") page to select which trips to want to attend.</p>
      }
    }
    else
    {
      <div class="text-danger">You cannot see upcoming trips because your account has not yet been approved by an administrator.</div>
    }
  </div>
</div>