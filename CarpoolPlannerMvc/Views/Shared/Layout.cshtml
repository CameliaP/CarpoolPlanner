@using CarpoolPlanner;
@using CarpoolPlanner.Model;

<!DOCTYPE html>
<html lang="en" ng-app="ngNetApp">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>@((!string.IsNullOrEmpty(ViewBag.Title) ? ViewBag.Title + " - " : "") + AppUtils.AppName)</title>
  <link href="~/Content/bootstrap.css" rel="stylesheet" />
  <link href="~/Content/Site.css" rel="stylesheet" />
  <link href="~/Content/themes/base/all.css" rel="stylesheet" />
  <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
  <script src="/Scripts/jquery-2.1.1.min.js" type="text/javascript"></script>
  <script src="/Scripts/jquery-ui-1.11.2.min.js" type="text/javascript"></script>
  <script src="/Scripts/bootstrap.min.js" type="text/javascript"></script>
  <script src="/Scripts/angular.min.js" type="text/javascript"></script>
  <script type="text/javascript">
    var ngNetApp = angular.module('ngNetApp', []);

    ngNetApp.controller('ngNetCtrl', ['$http', function($http) {
      var self = this;
      self.userId = '@AppUtils.CurrentUserId';
      self.model = @Html.JSModel();
      if (self.model == null)
        self.model = {};

      self.validateForm = function(form) {
        if (form.$valid) {
          return true;
        } else {
          // Display validation summary
          var msg = '';
          var jForm = $('[name=' + form.$name + ']')
          jForm.find('.ng-invalid').each(function (i, elem) {
            var currentMsg = $(elem).attr('error-message');
            if (currentMsg)
              msg += currentMsg + '\n';
          });
          self.model.Message = msg;
          self.model.MessageType = 2; // Error
          return false;
        }
      };

      self.submit = function(url) {
        self.model.Message = '';
        return $http.post(url, self.model)
          .success(function(result) {
            if (result.redirectUrl) {
              location.href = result.redirectUrl;
            } else {
              if (result.model != null)
                self.model = result.model;
              if (result.userId != null)
                self.userId = result.userId;
            }
          });
      };
    }]);

    ngNetApp.controller('validationCtrl', function($http) {
      this.validateForm = function(form) {
        if (form.$valid) {
          return true;
        } else {
          // Display validation summary
          var msg = '';
          var jqForm = $('[name=' + form.$name + ']');
          jqForm.find('.ng-invalid').each(function (i, elem) {
            var currentMsg = $(elem).attr('error-message');
            if (currentMsg)
              msg += currentMsg + '\n';
            // Move focus to the first invalid control
            if (i == 0)
              elem.focus();
          });
          this.model.Message = msg;
          this.model.MessageType = 2; // Error
          return false;
        }
      };
    });
  </script>
</head>
<body ng-controller="ngNetCtrl as ngNet">
  <div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        @Html.ActionLink(AppUtils.AppName, "Index", "Home", null, new { @class = "navbar-brand" })
      </div>
      <div class="navbar-collapse collapse">
@if (AppUtils.IsUserAuthenticated())
{
        <ul class="nav navbar-nav">
          <li>@Html.ActionLink("Home", "Index", "Home")</li>
          <li>@Html.ActionLink("Trips", "Trips", "Home")</li>
  @if (AppUtils.IsUserStatus(UserStatus.Active))
  {
          <li>@Html.ActionLink("Users", "List", "User")</li>
  }
        </ul>
        <ul class="nav navbar-nav navbar-right">
          <li>@Html.ActionLink("{{ ngNet.userId }}", "Manage", "User")</li>
          <li>@Html.ActionLink("Logout", "Logout", "User")</li>
        </ul>
}
else
{
        <ul class="nav navbar-nav navbar-right">
          <li>@Html.ActionLink("Register", "Register", "User")</li>
          <li>@Html.ActionLink("Login", "Login", "User")</li>
        </ul>
}
      </div>
    </div>
  </div>
  <div class="container body-content">
    @RenderBody()
  </div>
  @RenderSection("scripts", required: false)
</body>
</html>
